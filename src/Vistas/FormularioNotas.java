/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Entidades.Alumno;
import Entidades.Inscripcion;
import Entidades.Materias;
import accesoDatos.AlumnoData;
import accesoDatos.InscripcionData;
import accesoDatos.MateriaData;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author elihe
 */
public class FormularioNotas extends javax.swing.JInternalFrame {
    private List<Materias> listaM;
    private List<Alumno> listaA;
    private List<Inscripcion> listaI;
     
    private InscripcionData inscData;
    private MateriaData matData;
    private AlumnoData aluData;
    
    private DefaultTableModel modelo;
    private Inscripcion insc=null;
    private Materias mat=null;
    InscripcionData notaActual;
    private Alumno alu;
    
    

    /**
     * Creates new form FormularioNotas
     */
    public FormularioNotas() {
        initComponents();
        aluData=new AlumnoData();
        listaA =  aluData.listarAlumnos();
        modelo = new DefaultTableModel(){
        

            @Override
            public boolean isCellEditable(int f, int c) {
                if(c==2){
                    return true;
                }
                return false; 
            }

        };
        insc= new Inscripcion();
        inscData= new InscripcionData();
        matData= new MateriaData();
        notaActual = new InscripcionData();
        cargaAlumnos();
        armarTabla();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JCBSeleccionar = new javax.swing.JComboBox<>();
        JBGuardar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        JBSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTMateria = new javax.swing.JTable();

        JCBSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCBSeleccionarActionPerformed(evt);
            }
        });

        JBGuardar.setText("Guardar");
        JBGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBGuardarActionPerformed(evt);
            }
        });

        jLabel1.setText("Seleccione un alumno:");

        jLabel2.setText("Carga de notas");

        JBSalir.setText("Salir");
        JBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBSalirActionPerformed(evt);
            }
        });

        JTMateria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(JTMateria);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(JBGuardar)
                            .addComponent(jLabel1))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(JBSalir))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(JCBSeleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 42, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(JCBSeleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JBGuardar)
                    .addComponent(JBSalir))
                .addGap(58, 58, 58))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JBGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBGuardarActionPerformed
        // TODO add your handling code here:
        int filasSelecc=JTMateria.getSelectedRow();
        if(filasSelecc != -1){
            Alumno a=(Alumno) JCBSeleccionar.getSelectedItem();
            int idMat= (Integer) modelo.getValueAt(filasSelecc, 0);
            double nota =(Double) modelo.getValueAt(filasSelecc, 2);
            inscData.actualizarNota(a.getIdAlumno(), idMat, nota);
            borrarFilaTabla();
        }else{
            JOptionPane.showMessageDialog(this, "Debe seleccionar la materia para acutualizar la nota");
        };
    }//GEN-LAST:event_JBGuardarActionPerformed

    private void JCBSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCBSeleccionarActionPerformed
        // TODO add your handling code here:
        borrarFilaTabla();
       Alumno selec = (Alumno)JCBSeleccionar.getSelectedItem();
        listaI = inscData.obtenerInscripcionesPorAlumno(selec.getIdAlumno());
        for(Inscripcion insc: listaI){
            modelo.addRow(new Object[]{insc.getMaterias().getIdMateria(),insc.getMaterias().getNombre(), insc.getNota()});
        }
    }//GEN-LAST:event_JCBSeleccionarActionPerformed

    private void JBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_JBSalirActionPerformed
    private void cargaAlumnos(){
    for(Alumno item: listaA){
            JCBSeleccionar.addItem(item);
        }
    }
    private void armarTabla(){
        ArrayList<Object> filaCabecera = new ArrayList<>();
      filaCabecera.add("CÃ³digo");
      filaCabecera.add("Nombre");
      filaCabecera.add("Nota");
      for(Object it:filaCabecera){
          modelo.addColumn(it);
      }
      JTMateria.setModel(modelo);
    }
    private void borrarFilaTabla(){
     int indice = modelo.getRowCount()-1;
     
     for(int i= indice;i>=0;i--){
         modelo.removeRow(i);
     }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBGuardar;
    private javax.swing.JButton JBSalir;
    private javax.swing.JComboBox<Alumno> JCBSeleccionar;
    private javax.swing.JTable JTMateria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
